

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon May 27 21:17:17 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16  0000                     
    17                           ; Version 2.05
    18                           ; Generated 20/12/2018 GMT
    19                           ; 
    20                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F45K50 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     
    52                           	psect	idataCOMRAM
    53  007F02                     __pidataCOMRAM:
    54                           	opt callstack 0
    55                           
    56                           ;initializer for Display7Seg@F5147
    57  007F02  7E                 	db	126
    58  007F03  30                 	db	48
    59  007F04  6D                 	db	109
    60  007F05  79                 	db	121
    61  007F06  33                 	db	51
    62  007F07  5B                 	db	91
    63  007F08  5F                 	db	95
    64  007F09  70                 	db	112
    65  007F0A  7F                 	db	127
    66  007F0B  73                 	db	115
    67                           
    68                           	psect	nvCOMRAM
    69  00000B                     __pnvCOMRAM:
    70                           	opt callstack 0
    71  00000B                     _volt:
    72                           	opt callstack 0
    73  00000B                     	ds	4
    74  00000F                     _adcin:
    75                           	opt callstack 0
    76  00000F                     	ds	2
    77  0000                     _ANSELE	set	3935
    78  0000                     _ANSELD	set	3934
    79  0000                     _ANSELC	set	3933
    80  0000                     _ANSELA	set	3931
    81  0000                     _TRISE	set	3990
    82  0000                     _LATE	set	3981
    83  0000                     _TRISD	set	3989
    84  0000                     _LATD	set	3980
    85  0000                     _ADRESL	set	4035
    86  0000                     _ADRESH	set	4036
    87  0000                     _PORTA	set	3968
    88  0000                     _ADCON0bits	set	4034
    89  0000                     _ADCON0	set	4034
    90  0000                     _TRISC	set	3988
    91  0000                     _TRISA	set	3986
    92  0000                     _LATA	set	3977
    93  0000                     _ADCON1	set	4033
    94  0000                     _ADCON2	set	4032
    95  0000                     _OSCCON	set	4051
    96  0000                     _ADIF	set	31990
    97  0000                     _ADIE	set	31982
    98  0000                     _PEIE	set	32662
    99  0000                     _GIE	set	32663
   100                           
   101                           ; #config settings
   102  0000                     
   103                           	psect	cinit
   104  007F5E                     __pcinit:
   105                           	opt callstack 0
   106  007F5E                     start_initialization:
   107                           	opt callstack 0
   108  007F5E                     __initialization:
   109                           	opt callstack 0
   110                           
   111                           ; Initialize objects allocated to COMRAM (10 bytes)
   112                           ; load TBLPTR registers with __pidataCOMRAM
   113  007F5E  0E02               	movlw	low __pidataCOMRAM
   114  007F60  6EF6               	movwf	tblptrl,c
   115  007F62  0E7F               	movlw	high __pidataCOMRAM
   116  007F64  6EF7               	movwf	tblptrh,c
   117  007F66  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   118  007F68  6EF8               	movwf	tblptru,c
   119  007F6A  EE00  F001         	lfsr	0,__pdataCOMRAM
   120  007F6E  EE10 F00A          	lfsr	1,10
   121  007F72                     copy_data0:
   122  007F72  0009               	tblrd		*+
   123  007F74  CFF5 FFEE          	movff	tablat,postinc0
   124  007F78  50E5               	movf	postdec1,w,c
   125  007F7A  50E1               	movf	fsr1l,w,c
   126  007F7C  E1FA               	bnz	copy_data0
   127  007F7E                     end_of_initialization:
   128                           	opt callstack 0
   129  007F7E                     __end_of__initialization:
   130                           	opt callstack 0
   131  007F7E  0100               	movlb	0
   132  007F80  EFC2  F03F         	goto	_main	;jump to C main() function
   133                           
   134                           	psect	dataCOMRAM
   135  000001                     __pdataCOMRAM:
   136                           	opt callstack 0
   137  000001                     Display7Seg@F5147:
   138                           	opt callstack 0
   139  000001                     	ds	10
   140                           
   141                           	psect	cstackCOMRAM
   142  000011                     __pcstackCOMRAM:
   143                           	opt callstack 0
   144  000011                     ?_interruptadc:
   145                           	opt callstack 0
   146  000011                     interruptadc@adcin:
   147                           	opt callstack 0
   148                           
   149                           ; 2 bytes @ 0x0
   150  000011                     	ds	2
   151  000013                     ??_interruptadc:
   152                           
   153                           ; 1 bytes @ 0x2
   154  000013                     	ds	2
   155  000015                     ??_main:
   156                           
   157                           ; 1 bytes @ 0x4
   158  000015                     	ds	2
   159                           
   160 ;;
   161 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   162 ;;
   163 ;; *************** function _main *****************
   164 ;; Defined at:
   165 ;;		line 81 in file "main.c"
   166 ;; Parameters:    Size  Location     Type
   167 ;;		None
   168 ;; Auto vars:     Size  Location     Type
   169 ;;  out             2    0        int 
   170 ;; Return value:  Size  Location     Type
   171 ;;                  1    wreg      void 
   172 ;; Registers used:
   173 ;;		wreg, status,2, status,0, cstack
   174 ;; Tracked objects:
   175 ;;		On entry : 0/0
   176 ;;		On exit  : 0/0
   177 ;;		Unchanged: 0/0
   178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   179 ;;      Params:         0       0       0       0       0       0       0       0       0
   180 ;;      Locals:         0       0       0       0       0       0       0       0       0
   181 ;;      Temps:          2       0       0       0       0       0       0       0       0
   182 ;;      Totals:         2       0       0       0       0       0       0       0       0
   183 ;;Total ram usage:        2 bytes
   184 ;; Hardware stack levels required when called:    1
   185 ;; This function calls:
   186 ;;		_Init8LEDs
   187 ;;		_InitDisplay7Seg
   188 ;;		_interruptadc
   189 ;; This function is called by:
   190 ;;		Startup code after reset
   191 ;; This function uses a non-reentrant model
   192 ;;
   193                           
   194                           	psect	text0
   195  007F84                     __ptext0:
   196                           	opt callstack 0
   197  007F84                     _main:
   198                           	opt callstack 30
   199                           
   200                           ;main.c: 82:     volt = 0.0;
   201                           
   202                           ;incstack = 0
   203  007F84  0E00               	movlw	0
   204  007F86  6E0B               	movwf	_volt,c
   205  007F88  0E00               	movlw	0
   206  007F8A  6E0C               	movwf	_volt+1,c
   207  007F8C  0E00               	movlw	0
   208  007F8E  6E0D               	movwf	_volt+2,c
   209  007F90  0E00               	movlw	0
   210  007F92  6E0E               	movwf	_volt+3,c
   211                           
   212                           ;main.c: 83:     adcin = 0;
   213  007F94  0E00               	movlw	0
   214  007F96  6E10               	movwf	_adcin+1,c
   215  007F98  0E00               	movlw	0
   216  007F9A  6E0F               	movwf	_adcin,c
   217                           
   218                           ;main.c: 85:     int out;;main.c: 87:     Init8LEDs();
   219  007F9C  EC86  F03F         	call	_Init8LEDs	;wreg free
   220                           
   221                           ;main.c: 88:     InitDisplay7Seg();
   222  007FA0  EC8E  F03F         	call	_InitDisplay7Seg	;wreg free
   223                           
   224                           ;main.c: 90:     OSCCON = 0x53;
   225  007FA4  0E53               	movlw	83
   226  007FA6  6ED3               	movwf	4051,c	;volatile
   227                           
   228                           ;main.c: 91:     ADCON2 = 0x94;
   229  007FA8  0E94               	movlw	148
   230  007FAA  6EC0               	movwf	4032,c	;volatile
   231                           
   232                           ;main.c: 92:     ADCON1 = 0x00;
   233  007FAC  0E00               	movlw	0
   234  007FAE  6EC1               	movwf	4033,c	;volatile
   235                           
   236                           ;main.c: 93:     LATA = 0x00;
   237  007FB0  0E00               	movlw	0
   238  007FB2  6E89               	movwf	3977,c	;volatile
   239                           
   240                           ;main.c: 94:     TRISA = 0x00;
   241  007FB4  0E00               	movlw	0
   242  007FB6  6E92               	movwf	3986,c	;volatile
   243                           
   244                           ;main.c: 95:     ANSELA = 0x00;
   245  007FB8  0E00               	movlw	0
   246  007FBA  010F               	movlb	15	; () banked
   247  007FBC  6F5B               	movwf	91,b	;volatile
   248                           
   249                           ;main.c: 96:     TRISC = 0x04;
   250  007FBE  0E04               	movlw	4
   251  007FC0  6E94               	movwf	3988,c	;volatile
   252                           
   253                           ;main.c: 97:     ANSELC = 0x04;
   254  007FC2  0E04               	movlw	4
   255  007FC4  6F5D               	movwf	93,b	;volatile
   256                           
   257                           ;main.c: 98:     ADCON0 = 0x39;
   258  007FC6  0E39               	movlw	57
   259  007FC8  6EC2               	movwf	4034,c	;volatile
   260                           
   261                           ; BSR set to: 15
   262                           ;main.c: 100:     GIE = 1;
   263  007FCA  8EF2               	bsf	4082,7,c	;volatile
   264                           
   265                           ; BSR set to: 15
   266                           ;main.c: 101:     PEIE = 1;
   267  007FCC  8CF2               	bsf	4082,6,c	;volatile
   268                           
   269                           ; BSR set to: 15
   270                           ;main.c: 102:     ADIE = 1;
   271  007FCE  8C9D               	bsf	3997,6,c	;volatile
   272  007FD0                     l857:
   273                           
   274                           ;main.c: 106:      ADCON0bits.GO=1;
   275  007FD0  82C2               	bsf	4034,1,c	;volatile
   276                           
   277                           ;main.c: 107:      adcin = interruptadc(adcin);
   278  007FD2  C00F  F011         	movff	_adcin,interruptadc@adcin
   279  007FD6  C010  F012         	movff	_adcin+1,interruptadc@adcin+1
   280  007FDA  EC9C  F03F         	call	_interruptadc	;wreg free
   281  007FDE  C011  F00F         	movff	?_interruptadc,_adcin
   282  007FE2  C012  F010         	movff	?_interruptadc+1,_adcin+1
   283                           
   284                           ;main.c: 110:         PORTA = adcin/4;
   285  007FE6  C00F  F015         	movff	_adcin,??_main
   286  007FEA  C010  F016         	movff	_adcin+1,??_main+1
   287  007FEE  90D8               	bcf	status,0,c
   288  007FF0  3216               	rrcf	??_main+1,f,c
   289  007FF2  3215               	rrcf	??_main,f,c
   290  007FF4  90D8               	bcf	status,0,c
   291  007FF6  3216               	rrcf	??_main+1,f,c
   292  007FF8  3215               	rrcf	??_main,f,c
   293  007FFA  5015               	movf	??_main,w,c
   294  007FFC  6E80               	movwf	3968,c	;volatile
   295  007FFE  D7E8               	goto	l857
   296  008000                     __end_of_main:
   297                           	opt callstack 0
   298                           
   299 ;; *************** function _interruptadc *****************
   300 ;; Defined at:
   301 ;;		line 118 in file "main.c"
   302 ;; Parameters:    Size  Location     Type
   303 ;;  adcin           2    0[COMRAM] int 
   304 ;; Auto vars:     Size  Location     Type
   305 ;;		None
   306 ;; Return value:  Size  Location     Type
   307 ;;                  2    0[COMRAM] int 
   308 ;; Registers used:
   309 ;;		wreg, status,2, status,0
   310 ;; Tracked objects:
   311 ;;		On entry : 0/0
   312 ;;		On exit  : 0/0
   313 ;;		Unchanged: 0/0
   314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   315 ;;      Params:         2       0       0       0       0       0       0       0       0
   316 ;;      Locals:         0       0       0       0       0       0       0       0       0
   317 ;;      Temps:          2       0       0       0       0       0       0       0       0
   318 ;;      Totals:         4       0       0       0       0       0       0       0       0
   319 ;;Total ram usage:        4 bytes
   320 ;; Hardware stack levels used:    1
   321 ;; This function calls:
   322 ;;		Nothing
   323 ;; This function is called by:
   324 ;;		_main
   325 ;; This function uses a non-reentrant model
   326 ;;
   327                           
   328                           	psect	text1
   329  007F38                     __ptext1:
   330                           	opt callstack 0
   331  007F38                     _interruptadc:
   332                           	opt callstack 30
   333                           
   334                           ;main.c: 119:     if(ADIF==1) {
   335                           
   336                           ;incstack = 0
   337  007F38  AC9E               	btfss	3998,6,c	;volatile
   338  007F3A  D00A               	goto	l837
   339                           
   340                           ;main.c: 120:         ADIE=0;
   341  007F3C  9C9D               	bcf	3997,6,c	;volatile
   342                           
   343                           ;main.c: 121:         adcin = (ADRESH<<8)+ADRESL;
   344  007F3E  50C4               	movf	4036,w,c	;volatile
   345  007F40  6E14               	movwf	(??_interruptadc+1)& (0+255),c
   346  007F42  6A13               	clrf	??_interruptadc& (0+255),c
   347  007F44  50C3               	movf	4035,w,c	;volatile
   348  007F46  2413               	addwf	??_interruptadc,w,c
   349  007F48  6E11               	movwf	interruptadc@adcin,c
   350  007F4A  0E00               	movlw	0
   351  007F4C  2014               	addwfc	??_interruptadc+1,w,c
   352  007F4E  6E12               	movwf	interruptadc@adcin+1,c
   353  007F50                     l837:
   354                           
   355                           ;main.c: 123:     ADIE=1;
   356  007F50  8C9D               	bsf	3997,6,c	;volatile
   357                           
   358                           ;main.c: 124:     ADIF=0;
   359  007F52  9C9E               	bcf	3998,6,c	;volatile
   360                           
   361                           ;main.c: 125:     return adcin;
   362  007F54  C011  F011         	movff	interruptadc@adcin,?_interruptadc
   363  007F58  C012  F012         	movff	interruptadc@adcin+1,?_interruptadc+1
   364  007F5C  0012               	return		;funcret
   365  007F5E                     __end_of_interruptadc:
   366                           	opt callstack 0
   367                           
   368 ;; *************** function _InitDisplay7Seg *****************
   369 ;; Defined at:
   370 ;;		line 128 in file "main.c"
   371 ;; Parameters:    Size  Location     Type
   372 ;;		None
   373 ;; Auto vars:     Size  Location     Type
   374 ;;		None
   375 ;; Return value:  Size  Location     Type
   376 ;;                  1    wreg      void 
   377 ;; Registers used:
   378 ;;		wreg, status,2
   379 ;; Tracked objects:
   380 ;;		On entry : 0/0
   381 ;;		On exit  : 0/0
   382 ;;		Unchanged: 0/0
   383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   384 ;;      Params:         0       0       0       0       0       0       0       0       0
   385 ;;      Locals:         0       0       0       0       0       0       0       0       0
   386 ;;      Temps:          0       0       0       0       0       0       0       0       0
   387 ;;      Totals:         0       0       0       0       0       0       0       0       0
   388 ;;Total ram usage:        0 bytes
   389 ;; Hardware stack levels used:    1
   390 ;; This function calls:
   391 ;;		Nothing
   392 ;; This function is called by:
   393 ;;		_main
   394 ;; This function uses a non-reentrant model
   395 ;;
   396                           
   397                           	psect	text2
   398  007F1C                     __ptext2:
   399                           	opt callstack 0
   400  007F1C                     _InitDisplay7Seg:
   401                           	opt callstack 30
   402                           
   403                           ;main.c: 130:     LATD = 0x00;
   404                           
   405                           ;incstack = 0
   406  007F1C  0E00               	movlw	0
   407  007F1E  6E8C               	movwf	3980,c	;volatile
   408                           
   409                           ;main.c: 131:     TRISD = 0x00;
   410  007F20  0E00               	movlw	0
   411  007F22  6E95               	movwf	3989,c	;volatile
   412                           
   413                           ;main.c: 132:     ANSELD = 0x00;
   414  007F24  0E00               	movlw	0
   415  007F26  010F               	movlb	15	; () banked
   416  007F28  6F5E               	movwf	94,b	;volatile
   417                           
   418                           ;main.c: 133:     LATE = 0x00;
   419  007F2A  0E00               	movlw	0
   420  007F2C  6E8D               	movwf	3981,c	;volatile
   421                           
   422                           ;main.c: 134:     TRISE = 0x00;
   423  007F2E  0E00               	movlw	0
   424  007F30  6E96               	movwf	3990,c	;volatile
   425                           
   426                           ;main.c: 135:     ANSELE = 0x00;
   427  007F32  0E00               	movlw	0
   428  007F34  6F5F               	movwf	95,b	;volatile
   429                           
   430                           ; BSR set to: 15
   431  007F36  0012               	return		;funcret
   432  007F38                     __end_of_InitDisplay7Seg:
   433                           	opt callstack 0
   434                           
   435 ;; *************** function _Init8LEDs *****************
   436 ;; Defined at:
   437 ;;		line 140 in file "main.c"
   438 ;; Parameters:    Size  Location     Type
   439 ;;		None
   440 ;; Auto vars:     Size  Location     Type
   441 ;;		None
   442 ;; Return value:  Size  Location     Type
   443 ;;                  1    wreg      void 
   444 ;; Registers used:
   445 ;;		wreg, status,2
   446 ;; Tracked objects:
   447 ;;		On entry : 0/0
   448 ;;		On exit  : 0/0
   449 ;;		Unchanged: 0/0
   450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   451 ;;      Params:         0       0       0       0       0       0       0       0       0
   452 ;;      Locals:         0       0       0       0       0       0       0       0       0
   453 ;;      Temps:          0       0       0       0       0       0       0       0       0
   454 ;;      Totals:         0       0       0       0       0       0       0       0       0
   455 ;;Total ram usage:        0 bytes
   456 ;; Hardware stack levels used:    1
   457 ;; This function calls:
   458 ;;		Nothing
   459 ;; This function is called by:
   460 ;;		_main
   461 ;; This function uses a non-reentrant model
   462 ;;
   463                           
   464                           	psect	text3
   465  007F0C                     __ptext3:
   466                           	opt callstack 0
   467  007F0C                     _Init8LEDs:
   468                           	opt callstack 30
   469                           
   470                           ;main.c: 142:     LATA = 0x00;
   471                           
   472                           ; BSR set to: 15
   473                           ;incstack = 0
   474  007F0C  0E00               	movlw	0
   475  007F0E  6E89               	movwf	3977,c	;volatile
   476                           
   477                           ;main.c: 143:     TRISA = 0x00;
   478  007F10  0E00               	movlw	0
   479  007F12  6E92               	movwf	3986,c	;volatile
   480                           
   481                           ;main.c: 144:     ANSELA = 0x00;
   482  007F14  0E00               	movlw	0
   483  007F16  010F               	movlb	15	; () banked
   484  007F18  6F5B               	movwf	91,b	;volatile
   485                           
   486                           ; BSR set to: 15
   487  007F1A  0012               	return		;funcret
   488  007F1C                     __end_of_Init8LEDs:
   489                           	opt callstack 0
   490  0000                     
   491                           	psect	rparam
   492  0000                     tosu	equ	0xFFF
   493                           tosh	equ	0xFFE
   494                           tosl	equ	0xFFD
   495                           stkptr	equ	0xFFC
   496                           pclatu	equ	0xFFB
   497                           pclath	equ	0xFFA
   498                           pcl	equ	0xFF9
   499                           tblptru	equ	0xFF8
   500                           tblptrh	equ	0xFF7
   501                           tblptrl	equ	0xFF6
   502                           tablat	equ	0xFF5
   503                           prodh	equ	0xFF4
   504                           prodl	equ	0xFF3
   505                           indf0	equ	0xFEF
   506                           postinc0	equ	0xFEE
   507                           postdec0	equ	0xFED
   508                           preinc0	equ	0xFEC
   509                           plusw0	equ	0xFEB
   510                           fsr0h	equ	0xFEA
   511                           fsr0l	equ	0xFE9
   512                           wreg	equ	0xFE8
   513                           indf1	equ	0xFE7
   514                           postinc1	equ	0xFE6
   515                           postdec1	equ	0xFE5
   516                           preinc1	equ	0xFE4
   517                           plusw1	equ	0xFE3
   518                           fsr1h	equ	0xFE2
   519                           fsr1l	equ	0xFE1
   520                           bsr	equ	0xFE0
   521                           indf2	equ	0xFDF
   522                           postinc2	equ	0xFDE
   523                           postdec2	equ	0xFDD
   524                           preinc2	equ	0xFDC
   525                           plusw2	equ	0xFDB
   526                           fsr2h	equ	0xFDA
   527                           fsr2l	equ	0xFD9
   528                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      6      22
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_interruptadc

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      99
                                              4 COMRAM     2     2      0
                          _Init8LEDs
                    _InitDisplay7Seg
                       _interruptadc
 ---------------------------------------------------------------------------------
 (1) _interruptadc                                         4     2      2      99
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _InitDisplay7Seg                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init8LEDs                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init8LEDs
   _InitDisplay7Seg
   _interruptadc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      6      16       1       23.2%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      16       6        0.0%
DATA                 0      0      16       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon May 27 21:17:17 2019

            __CFG_CP0$OFF 000000              __CFG_CP1$OFF 000000              __CFG_CP2$OFF 000000  
            __CFG_CP3$OFF 000000               __CFG_LVP$ON 000000                       l837 7F50  
                     l857 7FD0                       _GIE 007F97              __CFG_CPB$OFF 000000  
            __CFG_CPD$OFF 000000                      _ADIE 007CEE                      _ADIF 007CF6  
                    _LATA 000F89                      _LATD 000F8C                      _LATE 000F8D  
                    _PEIE 007F96                      _main 7F84                      fsr1l 000FE1  
                    _volt 000B             __CFG_BORV$190 000000                      start 0000  
           __CFG_IESO$OFF 000000             __CFG_MCLRE$ON 000000              ___param_bank 000000  
                   ?_main 0011                     _PORTA 000F80                     _TRISA 000F92  
                   _TRISC 000F94                     _TRISD 000F95                     _TRISE 000F96  
           __CFG_WRT0$OFF 000000             __CFG_WRT1$OFF 000000             __CFG_WRT2$OFF 000000  
           __CFG_WRT3$OFF 000000            __CFG_EBTR0$OFF 000000            __CFG_FCMEN$OFF 000000  
          __CFG_EBTR1$OFF 000000            __CFG_EBTR2$OFF 000000            __CFG_EBTR3$OFF 000000  
           __CFG_WRTB$OFF 000000             __CFG_WRTC$OFF 000000             __CFG_WRTD$OFF 000000  
                   _adcin 000F            __CFG_EBTRB$OFF 000000                     tablat 000FF5  
                   status 000FD8            __CFG_T3CMX$RC0 000000            __CFG_ICPRT$OFF 000000  
          __CFG_PBADEN$ON 000000           __initialization 7F5E              __end_of_main 8000  
          __CFG_PCLKEN$ON 000000           _InitDisplay7Seg 7F1C                    ??_main 0015  
           __activetblptr 000000            __CFG_SDOMX$RB3 000000           __CFG_CCP2MX$RC1 000000  
                  _ADCON0 000FC2                    _ADCON1 000FC1                    _ADCON2 000FC0  
      __size_of_Init8LEDs 0010                    _ADRESH 000FC4                    _ADRESL 000FC3  
                  _ANSELA 000F5B                    _ANSELC 000F5D                    _ANSELD 000F5E  
                  _ANSELE 000F5F            __CFG_WDTEN$OFF 000000                    _OSCCON 000FD3  
          __CFG_XINST$OFF 000000              __pdataCOMRAM 0001                    tblptrh 000FF7  
                  tblptrl 000FF6                    tblptru 000FF8      __CFG_LS48MHZ$SYS24X4 000000  
              __accesstop 0060   __end_of__initialization 7F7E             ___rparam_used 000001  
 __end_of_InitDisplay7Seg 7F38            __pcstackCOMRAM 0011          __CFG_nPWRTEN$OFF 000000  
           ?_interruptadc 0011         __end_of_Init8LEDs 7F1C                __pnvCOMRAM 000B  
       __CFG_PLLSEL$PLL4X 000000            ??_interruptadc 0013                   __Hparam 0000  
        ?_InitDisplay7Seg 0011                   __Lparam 0000           __CFG_STVREN$OFF 000000  
                 __pcinit 7F5E                   __ramtop 0800                   __ptext0 7F84  
                 __ptext1 7F38                   __ptext2 7F1C                   __ptext3 7F0C  
    end_of_initialization 7F7E                   postdec1 000FE5                   postinc0 000FEE  
    __end_of_interruptadc 7F5E             __pidataCOMRAM 7F02                 _Init8LEDs 7F0C  
     start_initialization 7F5E           __CFG_nLPBOR$OFF 000000                ?_Init8LEDs 0011  
       interruptadc@adcin 0011     __size_of_interruptadc 0026          Display7Seg@F5147 0001  
        __CFG_WDTPS$32768 000000              _interruptadc 7F38  __size_of_InitDisplay7Seg 001C  
              _ADCON0bits 000FC2               ??_Init8LEDs 0011         __CFG_CFGPLLEN$OFF 000000  
               copy_data0 7F72                  __Hrparam 0000                  __Lrparam 0000  
      __CFG_BOREN$SBORDIS 000000             __size_of_main 007C         ??_InitDisplay7Seg 0011  
    __CFG_CPUDIV$NOCLKDIV 000000        __CFG_FOSC$INTOSCIO 000000  
