

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon May 27 15:59:21 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17  0000                     
    18                           ; Version 2.05
    19                           ; Generated 20/12/2018 GMT
    20                           ; 
    21                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F45K50 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     
    53                           	psect	idataCOMRAM
    54  007F04                     __pidataCOMRAM:
    55                           	opt callstack 0
    56                           
    57                           ;initializer for Display7Seg@F5146
    58  007F04  7E                 	db	126
    59  007F05  30                 	db	48
    60  007F06  6D                 	db	109
    61  007F07  79                 	db	121
    62  007F08  33                 	db	51
    63  007F09  5B                 	db	91
    64  007F0A  5F                 	db	95
    65  007F0B  70                 	db	112
    66  007F0C  7F                 	db	127
    67  007F0D  73                 	db	115
    68                           
    69                           	psect	nvCOMRAM
    70  00000B                     __pnvCOMRAM:
    71                           	opt callstack 0
    72  00000B                     _volt:
    73                           	opt callstack 0
    74  00000B                     	ds	4
    75  0000                     _ANSELE	set	3935
    76  0000                     _ANSELD	set	3934
    77  0000                     _ANSELC	set	3933
    78  0000                     _ANSELA	set	3931
    79  0000                     _TRISE	set	3990
    80  0000                     _LATE	set	3981
    81  0000                     _TRISD	set	3989
    82  0000                     _LATD	set	3980
    83  0000                     _ADRESL	set	4035
    84  0000                     _ADRESH	set	4036
    85  0000                     _ADCON0bits	set	4034
    86  0000                     _ADCON0	set	4034
    87  0000                     _TRISC	set	3988
    88  0000                     _TRISA	set	3986
    89  0000                     _LATA	set	3977
    90  0000                     _ADCON1	set	4033
    91  0000                     _ADCON2	set	4032
    92  0000                     _OSCCON	set	4051
    93  0000                     _ADIF	set	31990
    94  0000                     _LA0	set	31816
    95  0000                     _ADIE	set	31982
    96  0000                     _PEIE	set	32662
    97  0000                     _GIE	set	32663
    98                           
    99                           ; #config settings
   100  0000                     
   101                           	psect	cinit
   102  007F60                     __pcinit:
   103                           	opt callstack 0
   104  007F60                     start_initialization:
   105                           	opt callstack 0
   106  007F60                     __initialization:
   107                           	opt callstack 0
   108                           
   109                           ; Initialize objects allocated to COMRAM (10 bytes)
   110                           ; load TBLPTR registers with __pidataCOMRAM
   111  007F60  0E04               	movlw	low __pidataCOMRAM
   112  007F62  6EF6               	movwf	tblptrl,c
   113  007F64  0E7F               	movlw	high __pidataCOMRAM
   114  007F66  6EF7               	movwf	tblptrh,c
   115  007F68  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   116  007F6A  6EF8               	movwf	tblptru,c
   117  007F6C  EE00  F001         	lfsr	0,__pdataCOMRAM
   118  007F70  EE10 F00A          	lfsr	1,10
   119  007F74                     copy_data0:
   120  007F74  0009               	tblrd		*+
   121  007F76  CFF5 FFEE          	movff	tablat,postinc0
   122  007F7A  50E5               	movf	postdec1,w,c
   123  007F7C  50E1               	movf	fsr1l,w,c
   124  007F7E  E1FA               	bnz	copy_data0
   125                           
   126                           ; Clear objects allocated to COMRAM (2 bytes)
   127  007F80  6A14               	clrf	(__pbssCOMRAM+1)& (0+255),c
   128  007F82  6A13               	clrf	__pbssCOMRAM& (0+255),c
   129  007F84                     end_of_initialization:
   130                           	opt callstack 0
   131  007F84                     __end_of__initialization:
   132                           	opt callstack 0
   133  007F84  0100               	movlb	0
   134  007F86  EFC5  F03F         	goto	_main	;jump to C main() function
   135                           
   136                           	psect	bssCOMRAM
   137  000013                     __pbssCOMRAM:
   138                           	opt callstack 0
   139  000013                     _adcin:
   140                           	opt callstack 0
   141  000013                     	ds	2
   142                           
   143                           	psect	dataCOMRAM
   144  000001                     __pdataCOMRAM:
   145                           	opt callstack 0
   146  000001                     Display7Seg@F5146:
   147                           	opt callstack 0
   148  000001                     	ds	10
   149                           
   150                           	psect	cstackCOMRAM
   151  00000F                     __pcstackCOMRAM:
   152                           	opt callstack 0
   153  00000F                     ?_interruptadc:
   154                           	opt callstack 0
   155  00000F                     interruptadc@adcin:
   156                           	opt callstack 0
   157                           
   158                           ; 2 bytes @ 0x0
   159  00000F                     	ds	2
   160  000011                     ??_interruptadc:
   161                           
   162                           ; 1 bytes @ 0x2
   163  000011                     	ds	2
   164  000013                     
   165                           ; 1 bytes @ 0x4
   166 ;;
   167 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   168 ;;
   169 ;; *************** function _main *****************
   170 ;; Defined at:
   171 ;;		line 81 in file "main.c"
   172 ;; Parameters:    Size  Location     Type
   173 ;;		None
   174 ;; Auto vars:     Size  Location     Type
   175 ;;		None
   176 ;; Return value:  Size  Location     Type
   177 ;;                  1    wreg      void 
   178 ;; Registers used:
   179 ;;		wreg, status,2, status,0, cstack
   180 ;; Tracked objects:
   181 ;;		On entry : 0/0
   182 ;;		On exit  : 0/0
   183 ;;		Unchanged: 0/0
   184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   185 ;;      Params:         0       0       0       0       0       0       0       0       0
   186 ;;      Locals:         0       0       0       0       0       0       0       0       0
   187 ;;      Temps:          0       0       0       0       0       0       0       0       0
   188 ;;      Totals:         0       0       0       0       0       0       0       0       0
   189 ;;Total ram usage:        0 bytes
   190 ;; Hardware stack levels required when called:    1
   191 ;; This function calls:
   192 ;;		_Init8LEDs
   193 ;;		_InitDisplay7Seg
   194 ;;		_interruptadc
   195 ;; This function is called by:
   196 ;;		Startup code after reset
   197 ;; This function uses a non-reentrant model
   198 ;;
   199                           
   200                           	psect	text0
   201  007F8A                     __ptext0:
   202                           	opt callstack 0
   203  007F8A                     _main:
   204                           	opt callstack 30
   205                           
   206                           ;main.c: 82:     volt = 0.0;
   207                           
   208                           ;incstack = 0
   209  007F8A  0E00               	movlw	0
   210  007F8C  6E0B               	movwf	_volt,c
   211  007F8E  0E00               	movlw	0
   212  007F90  6E0C               	movwf	_volt+1,c
   213  007F92  0E00               	movlw	0
   214  007F94  6E0D               	movwf	_volt+2,c
   215  007F96  0E00               	movlw	0
   216  007F98  6E0E               	movwf	_volt+3,c
   217                           
   218                           ;main.c: 83:     adcin = 0;
   219  007F9A  0E00               	movlw	0
   220  007F9C  6E14               	movwf	_adcin+1,c
   221  007F9E  0E00               	movlw	0
   222  007FA0  6E13               	movwf	_adcin,c
   223                           
   224                           ;main.c: 85:     Init8LEDs();
   225  007FA2  EC87  F03F         	call	_Init8LEDs	;wreg free
   226                           
   227                           ;main.c: 86:     InitDisplay7Seg();
   228  007FA6  EC8F  F03F         	call	_InitDisplay7Seg	;wreg free
   229                           
   230                           ;main.c: 88:     OSCCON = 0x53;
   231  007FAA  0E53               	movlw	83
   232  007FAC  6ED3               	movwf	4051,c	;volatile
   233                           
   234                           ;main.c: 89:     ADCON2 = 0x94;
   235  007FAE  0E94               	movlw	148
   236  007FB0  6EC0               	movwf	4032,c	;volatile
   237                           
   238                           ;main.c: 90:     ADCON1 = 0x00;
   239  007FB2  0E00               	movlw	0
   240  007FB4  6EC1               	movwf	4033,c	;volatile
   241                           
   242                           ;main.c: 91:     LATA = 0x00;
   243  007FB6  0E00               	movlw	0
   244  007FB8  6E89               	movwf	3977,c	;volatile
   245                           
   246                           ;main.c: 92:     TRISA = 0x00;
   247  007FBA  0E00               	movlw	0
   248  007FBC  6E92               	movwf	3986,c	;volatile
   249                           
   250                           ;main.c: 93:     ANSELA = 0x01;
   251  007FBE  0E01               	movlw	1
   252  007FC0  010F               	movlb	15	; () banked
   253  007FC2  6F5B               	movwf	91,b	;volatile
   254                           
   255                           ;main.c: 94:     TRISC = 0x04;
   256  007FC4  0E04               	movlw	4
   257  007FC6  6E94               	movwf	3988,c	;volatile
   258                           
   259                           ;main.c: 95:     ANSELC = 0x04;
   260  007FC8  0E04               	movlw	4
   261  007FCA  6F5D               	movwf	93,b	;volatile
   262                           
   263                           ;main.c: 96:     ADCON0 = 0x39;
   264  007FCC  0E39               	movlw	57
   265  007FCE  6EC2               	movwf	4034,c	;volatile
   266                           
   267                           ; BSR set to: 15
   268                           ;main.c: 98:     GIE = 1;
   269  007FD0  8EF2               	bsf	4082,7,c	;volatile
   270                           
   271                           ; BSR set to: 15
   272                           ;main.c: 99:     PEIE = 1;
   273  007FD2  8CF2               	bsf	4082,6,c	;volatile
   274                           
   275                           ; BSR set to: 15
   276                           ;main.c: 100:     ADIE = 1;
   277  007FD4  8C9D               	bsf	3997,6,c	;volatile
   278  007FD6                     l859:
   279                           
   280                           ;main.c: 103:         _delay((unsigned long)((1)*(4000000/4000.0)));
   281  007FD6  0EC8               	movlw	200
   282  007FD8                     u87:
   283  007FD8  D000               	nop2	
   284  007FDA  2EE8               	decfsz	wreg,f,c
   285  007FDC  D7FD               	bra	u87
   286                           
   287                           ;main.c: 104:         ADCON0bits.GO=1;
   288  007FDE  82C2               	bsf	4034,1,c	;volatile
   289                           
   290                           ;main.c: 105:         adcin = interruptadc(adcin);
   291  007FE0  C013  F00F         	movff	_adcin,interruptadc@adcin
   292  007FE4  C014  F010         	movff	_adcin+1,interruptadc@adcin+1
   293  007FE8  EC9D  F03F         	call	_interruptadc	;wreg free
   294  007FEC  C00F  F013         	movff	?_interruptadc,_adcin
   295  007FF0  C010  F014         	movff	?_interruptadc+1,_adcin+1
   296                           
   297                           ;main.c: 111:         LA0=adcin;
   298  007FF4  A013               	btfss	_adcin,0,c
   299  007FF6  D002               	goto	u60
   300  007FF8  8089               	bsf	3977,0,c	;volatile
   301  007FFA  D7ED               	goto	l859
   302  007FFC                     u60:
   303  007FFC  9089               	bcf	3977,0,c	;volatile
   304  007FFE  D7EB               	goto	l859
   305  008000                     __end_of_main:
   306                           	opt callstack 0
   307                           
   308 ;; *************** function _interruptadc *****************
   309 ;; Defined at:
   310 ;;		line 116 in file "main.c"
   311 ;; Parameters:    Size  Location     Type
   312 ;;  adcin           2    0[COMRAM] int 
   313 ;; Auto vars:     Size  Location     Type
   314 ;;		None
   315 ;; Return value:  Size  Location     Type
   316 ;;                  2    0[COMRAM] int 
   317 ;; Registers used:
   318 ;;		wreg, status,2, status,0
   319 ;; Tracked objects:
   320 ;;		On entry : 0/0
   321 ;;		On exit  : 0/0
   322 ;;		Unchanged: 0/0
   323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   324 ;;      Params:         2       0       0       0       0       0       0       0       0
   325 ;;      Locals:         0       0       0       0       0       0       0       0       0
   326 ;;      Temps:          2       0       0       0       0       0       0       0       0
   327 ;;      Totals:         4       0       0       0       0       0       0       0       0
   328 ;;Total ram usage:        4 bytes
   329 ;; Hardware stack levels used:    1
   330 ;; This function calls:
   331 ;;		Nothing
   332 ;; This function is called by:
   333 ;;		_main
   334 ;; This function uses a non-reentrant model
   335 ;;
   336                           
   337                           	psect	text1
   338  007F3A                     __ptext1:
   339                           	opt callstack 0
   340  007F3A                     _interruptadc:
   341                           	opt callstack 30
   342                           
   343                           ;main.c: 117:     if(ADIF==1) {
   344                           
   345                           ;incstack = 0
   346  007F3A  AC9E               	btfss	3998,6,c	;volatile
   347  007F3C  D00A               	goto	l839
   348                           
   349                           ;main.c: 118:         ADIE=0;
   350  007F3E  9C9D               	bcf	3997,6,c	;volatile
   351                           
   352                           ;main.c: 119:         adcin = (ADRESH<<8)+ADRESL;
   353  007F40  50C4               	movf	4036,w,c	;volatile
   354  007F42  6E12               	movwf	(??_interruptadc+1)& (0+255),c
   355  007F44  6A11               	clrf	??_interruptadc& (0+255),c
   356  007F46  50C3               	movf	4035,w,c	;volatile
   357  007F48  2411               	addwf	??_interruptadc,w,c
   358  007F4A  6E0F               	movwf	interruptadc@adcin,c
   359  007F4C  0E00               	movlw	0
   360  007F4E  2012               	addwfc	??_interruptadc+1,w,c
   361  007F50  6E10               	movwf	interruptadc@adcin+1,c
   362  007F52                     l839:
   363                           
   364                           ;main.c: 121:     ADIE=1;
   365  007F52  8C9D               	bsf	3997,6,c	;volatile
   366                           
   367                           ;main.c: 122:     ADIF=0;
   368  007F54  9C9E               	bcf	3998,6,c	;volatile
   369                           
   370                           ;main.c: 123:     return adcin;
   371  007F56  C00F  F00F         	movff	interruptadc@adcin,?_interruptadc
   372  007F5A  C010  F010         	movff	interruptadc@adcin+1,?_interruptadc+1
   373  007F5E  0012               	return		;funcret
   374  007F60                     __end_of_interruptadc:
   375                           	opt callstack 0
   376                           
   377 ;; *************** function _InitDisplay7Seg *****************
   378 ;; Defined at:
   379 ;;		line 126 in file "main.c"
   380 ;; Parameters:    Size  Location     Type
   381 ;;		None
   382 ;; Auto vars:     Size  Location     Type
   383 ;;		None
   384 ;; Return value:  Size  Location     Type
   385 ;;                  1    wreg      void 
   386 ;; Registers used:
   387 ;;		wreg, status,2
   388 ;; Tracked objects:
   389 ;;		On entry : 0/0
   390 ;;		On exit  : 0/0
   391 ;;		Unchanged: 0/0
   392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   393 ;;      Params:         0       0       0       0       0       0       0       0       0
   394 ;;      Locals:         0       0       0       0       0       0       0       0       0
   395 ;;      Temps:          0       0       0       0       0       0       0       0       0
   396 ;;      Totals:         0       0       0       0       0       0       0       0       0
   397 ;;Total ram usage:        0 bytes
   398 ;; Hardware stack levels used:    1
   399 ;; This function calls:
   400 ;;		Nothing
   401 ;; This function is called by:
   402 ;;		_main
   403 ;; This function uses a non-reentrant model
   404 ;;
   405                           
   406                           	psect	text2
   407  007F1E                     __ptext2:
   408                           	opt callstack 0
   409  007F1E                     _InitDisplay7Seg:
   410                           	opt callstack 30
   411                           
   412                           ;main.c: 128:     LATD = 0x00;
   413                           
   414                           ;incstack = 0
   415  007F1E  0E00               	movlw	0
   416  007F20  6E8C               	movwf	3980,c	;volatile
   417                           
   418                           ;main.c: 129:     TRISD = 0x00;
   419  007F22  0E00               	movlw	0
   420  007F24  6E95               	movwf	3989,c	;volatile
   421                           
   422                           ;main.c: 130:     ANSELD = 0x00;
   423  007F26  0E00               	movlw	0
   424  007F28  010F               	movlb	15	; () banked
   425  007F2A  6F5E               	movwf	94,b	;volatile
   426                           
   427                           ;main.c: 131:     LATE = 0x00;
   428  007F2C  0E00               	movlw	0
   429  007F2E  6E8D               	movwf	3981,c	;volatile
   430                           
   431                           ;main.c: 132:     TRISE = 0x00;
   432  007F30  0E00               	movlw	0
   433  007F32  6E96               	movwf	3990,c	;volatile
   434                           
   435                           ;main.c: 133:     ANSELE = 0x00;
   436  007F34  0E00               	movlw	0
   437  007F36  6F5F               	movwf	95,b	;volatile
   438                           
   439                           ; BSR set to: 15
   440  007F38  0012               	return		;funcret
   441  007F3A                     __end_of_InitDisplay7Seg:
   442                           	opt callstack 0
   443                           
   444 ;; *************** function _Init8LEDs *****************
   445 ;; Defined at:
   446 ;;		line 138 in file "main.c"
   447 ;; Parameters:    Size  Location     Type
   448 ;;		None
   449 ;; Auto vars:     Size  Location     Type
   450 ;;		None
   451 ;; Return value:  Size  Location     Type
   452 ;;                  1    wreg      void 
   453 ;; Registers used:
   454 ;;		wreg, status,2
   455 ;; Tracked objects:
   456 ;;		On entry : 0/0
   457 ;;		On exit  : 0/0
   458 ;;		Unchanged: 0/0
   459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   460 ;;      Params:         0       0       0       0       0       0       0       0       0
   461 ;;      Locals:         0       0       0       0       0       0       0       0       0
   462 ;;      Temps:          0       0       0       0       0       0       0       0       0
   463 ;;      Totals:         0       0       0       0       0       0       0       0       0
   464 ;;Total ram usage:        0 bytes
   465 ;; Hardware stack levels used:    1
   466 ;; This function calls:
   467 ;;		Nothing
   468 ;; This function is called by:
   469 ;;		_main
   470 ;; This function uses a non-reentrant model
   471 ;;
   472                           
   473                           	psect	text3
   474  007F0E                     __ptext3:
   475                           	opt callstack 0
   476  007F0E                     _Init8LEDs:
   477                           	opt callstack 30
   478                           
   479                           ;main.c: 140:     LATA = 0x00;
   480                           
   481                           ; BSR set to: 15
   482                           ;incstack = 0
   483  007F0E  0E00               	movlw	0
   484  007F10  6E89               	movwf	3977,c	;volatile
   485                           
   486                           ;main.c: 141:     TRISA = 0x00;
   487  007F12  0E00               	movlw	0
   488  007F14  6E92               	movwf	3986,c	;volatile
   489                           
   490                           ;main.c: 142:     ANSELA = 0x00;
   491  007F16  0E00               	movlw	0
   492  007F18  010F               	movlb	15	; () banked
   493  007F1A  6F5B               	movwf	91,b	;volatile
   494                           
   495                           ; BSR set to: 15
   496  007F1C  0012               	return		;funcret
   497  007F1E                     __end_of_Init8LEDs:
   498                           	opt callstack 0
   499  0000                     
   500                           	psect	rparam
   501  0000                     tosu	equ	0xFFF
   502                           tosh	equ	0xFFE
   503                           tosl	equ	0xFFD
   504                           stkptr	equ	0xFFC
   505                           pclatu	equ	0xFFB
   506                           pclath	equ	0xFFA
   507                           pcl	equ	0xFF9
   508                           tblptru	equ	0xFF8
   509                           tblptrh	equ	0xFF7
   510                           tblptrl	equ	0xFF6
   511                           tablat	equ	0xFF5
   512                           prodh	equ	0xFF4
   513                           prodl	equ	0xFF3
   514                           indf0	equ	0xFEF
   515                           postinc0	equ	0xFEE
   516                           postdec0	equ	0xFED
   517                           preinc0	equ	0xFEC
   518                           plusw0	equ	0xFEB
   519                           fsr0h	equ	0xFEA
   520                           fsr0l	equ	0xFE9
   521                           wreg	equ	0xFE8
   522                           indf1	equ	0xFE7
   523                           postinc1	equ	0xFE6
   524                           postdec1	equ	0xFE5
   525                           preinc1	equ	0xFE4
   526                           plusw1	equ	0xFE3
   527                           fsr1h	equ	0xFE2
   528                           fsr1l	equ	0xFE1
   529                           bsr	equ	0xFE0
   530                           indf2	equ	0xFDF
   531                           postinc2	equ	0xFDE
   532                           postdec2	equ	0xFDD
   533                           preinc2	equ	0xFDC
   534                           plusw2	equ	0xFDB
   535                           fsr2h	equ	0xFDA
   536                           fsr2l	equ	0xFD9
   537                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         2
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      4      20
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_interruptadc

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      99
                          _Init8LEDs
                    _InitDisplay7Seg
                       _interruptadc
 ---------------------------------------------------------------------------------
 (1) _interruptadc                                         4     2      2      99
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _InitDisplay7Seg                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init8LEDs                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init8LEDs
   _InitDisplay7Seg
   _interruptadc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      4      14       1       21.1%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      14       6        0.0%
DATA                 0      0      14       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon May 27 15:59:21 2019

                      u60 7FFC                        u87 7FD8              __CFG_CP0$OFF 000000  
            __CFG_CP1$OFF 000000              __CFG_CP2$OFF 000000              __CFG_CP3$OFF 000000  
             __CFG_LVP$ON 000000                       _LA0 007C48                       l839 7F52  
                     l859 7FD6                       _GIE 007F97              __CFG_CPB$OFF 000000  
            __CFG_CPD$OFF 000000                       wreg 000FE8                      _ADIE 007CEE  
                    _ADIF 007CF6                      _LATA 000F89                      _LATD 000F8C  
                    _LATE 000F8D                      _PEIE 007F96                      _main 7F8A  
                    fsr1l 000FE1                      _volt 000B             __CFG_BORV$190 000000  
                    start 0000             __CFG_IESO$OFF 000000             __CFG_MCLRE$ON 000000  
            ___param_bank 000000                     ?_main 000F                     _TRISA 000F92  
                   _TRISC 000F94                     _TRISD 000F95                     _TRISE 000F96  
           __CFG_WRT0$OFF 000000             __CFG_WRT1$OFF 000000             __CFG_WRT2$OFF 000000  
           __CFG_WRT3$OFF 000000            __CFG_EBTR0$OFF 000000            __CFG_FCMEN$OFF 000000  
          __CFG_EBTR1$OFF 000000            __CFG_EBTR2$OFF 000000            __CFG_EBTR3$OFF 000000  
           __CFG_WRTB$OFF 000000             __CFG_WRTC$OFF 000000             __CFG_WRTD$OFF 000000  
                   _adcin 0013            __CFG_EBTRB$OFF 000000                     tablat 000FF5  
          __CFG_T3CMX$RC0 000000            __CFG_ICPRT$OFF 000000            __CFG_PBADEN$ON 000000  
         __initialization 7F60              __end_of_main 8000            __CFG_PCLKEN$ON 000000  
         _InitDisplay7Seg 7F1E                    ??_main 0013             __activetblptr 000000  
          __CFG_SDOMX$RB3 000000           __CFG_CCP2MX$RC1 000000                    _ADCON0 000FC2  
                  _ADCON1 000FC1                    _ADCON2 000FC0        __size_of_Init8LEDs 0010  
                  _ADRESH 000FC4                    _ADRESL 000FC3                    _ANSELA 000F5B  
                  _ANSELC 000F5D                    _ANSELD 000F5E                    _ANSELE 000F5F  
          __CFG_WDTEN$OFF 000000                    _OSCCON 000FD3            __CFG_XINST$OFF 000000  
            __pdataCOMRAM 0001                    tblptrh 000FF7                    tblptrl 000FF6  
                  tblptru 000FF8      __CFG_LS48MHZ$SYS24X4 000000                __accesstop 0060  
 __end_of__initialization 7F84             ___rparam_used 000001   __end_of_InitDisplay7Seg 7F3A  
          __pcstackCOMRAM 000F          __CFG_nPWRTEN$OFF 000000             ?_interruptadc 000F  
       __end_of_Init8LEDs 7F1E                __pnvCOMRAM 000B         __CFG_PLLSEL$PLL4X 000000  
          ??_interruptadc 0011                   __Hparam 0000          ?_InitDisplay7Seg 000F  
                 __Lparam 0000           __CFG_STVREN$OFF 000000                   __pcinit 7F60  
                 __ramtop 0800                   __ptext0 7F8A                   __ptext1 7F3A  
                 __ptext2 7F1E                   __ptext3 7F0E      end_of_initialization 7F84  
                 postdec1 000FE5                   postinc0 000FEE      __end_of_interruptadc 7F60  
           __pidataCOMRAM 7F04                 _Init8LEDs 7F0E       start_initialization 7F60  
         __CFG_nLPBOR$OFF 000000                ?_Init8LEDs 000F               __pbssCOMRAM 0013  
       interruptadc@adcin 000F     __size_of_interruptadc 0026          Display7Seg@F5146 0001  
        __CFG_WDTPS$32768 000000              _interruptadc 7F3A  __size_of_InitDisplay7Seg 001C  
              _ADCON0bits 000FC2               ??_Init8LEDs 000F         __CFG_CFGPLLEN$OFF 000000  
               copy_data0 7F74                  __Hrparam 0000                  __Lrparam 0000  
      __CFG_BOREN$SBORDIS 000000             __size_of_main 0076         ??_InitDisplay7Seg 000F  
    __CFG_CPUDIV$NOCLKDIV 000000        __CFG_FOSC$INTOSCIO 000000  
